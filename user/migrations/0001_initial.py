# Generated by Django 3.2.18 on 2023-03-06 09:25

import common.validators
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=200, null=True)),
                ('last_name', models.CharField(blank=True, max_length=200, null=True)),
                ('password', models.CharField(blank=True, max_length=200, null=True)),
                ('email', models.CharField(max_length=200, unique=True)),
                ('user_type', models.CharField(choices=[(1, 'SUPER_ADMIN'), (2, 'ADMIN')], default=1, max_length=1)),
                ('status', models.CharField(choices=[(0, 'DELETED'), (1, 'ACTIVE'), (2, 'INACTIVE'), (3, 'BLOCKED')], default=1, max_length=1)),
                ('image', models.ImageField(max_length=300, null=True, upload_to='user_profile_images', validators=[common.validators.validate_image])),
                ('phone', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
